# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# Requires an external config file
CONFIG_FILE_PROD= "vagrant-prod.rb"
CONFIG_FILE_DEV = "vagrant-dev.rb"

# Default configs (override in config file only)
PRODUCTION_MODE=true
USE_GUI=false
MAIN_CPU_COUNT=1
MAIN_HOSTNAME="vtfx.dev.mainstorconcept.de"
MAIN_GATEWAY="172.20.1.254"
MAIN_IP_ADDR="192.168.55.60"
MAIN_RAM=1024
#PROJECT_NAME="unnamedApp" # Should be overrided un CONFIG_FILE! Should be
#a slug


# The required config file are a directory higher, thats why ../ is prepended to
# require_relative function call
if File.exist?(CONFIG_FILE_DEV)
    puts "DEVELOPMENT: Loading settings from: #{CONFIG_FILE_DEV}"
    require_relative "../#{CONFIG_FILE_DEV}"
else
    puts "PRODUCTION: Loading setting from (#{CONFIG_FILE_PROD})"
    require_relative "../#{CONFIG_FILE_PROD}"
end
puts "\nPRODUCTION_MODE: #{PRODUCTION_MODE}"
puts "USE_GUI: #{USE_GUI}"

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    config.vm.provider :virtualbox do |vb| 
        vb.gui = USE_GUI 
    end

    config.vm.define "main", primary: true do |main|
        main.vm.box = "ubuntu/trusty64"
        main.vm.box_url = "http://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box"
        config.vm.provider :virtualbox do |vb| 
            vb.name = PROJECT_NAME
            vb.customize ["modifyvm", :id, "--memory", MAIN_RAM]
            vb.customize ["modifyvm", :id, "--ioapic", "on"]
            vb.customize ["modifyvm", :id, "--cpus", MAIN_CPU_COUNT]
        end
        main.vm.hostname=MAIN_HOSTNAME

        if PRODUCTION_MODE == true
            # In production mode configure a 'public' ip addres and confugure
            # the fucking gateway when provisioning. Don't forget to provision!
            #
            config.vm.network :public_network, ip: MAIN_IP_ADDR
            default_router = MAIN_GATEWAY
            # change/ensure the default route via the local network's WAN router, 
            # useful for public_network/bridged mode
            config.vm.provision :shell, :inline => "echo 'Network POSCONFIG'; ip route delete default || true; ip route add default via #{default_router}"
        else
            # If not, just use the provided ip address for the private network
            main.vm.network :private_network, ip: MAIN_IP_ADDR
        end

        if defined? (EXTRA_PROVISION_SCRIPT)
            puts "INFO: Running extra provision: #{EXTRA_PROVISION_SCRIPT}"
            main.vm.provision :shell, :path => "#{EXTRA_PROVISION_SCRIPT}"
        else
            puts "INFO: No extra provision defined"
        end
    end 
end
